{"version":3,"sources":["../../src/binders/bindTransactionConnection.js"],"names":["parentLog","connection","clientConfiguration","transactionDepth","mapInvocation","fn","bound","taggedQuery","slonik","Promise","reject","Error","any","bind","anyFirst","many","manyFirst","maybeOne","maybeOneFirst","one","oneFirst","query","transaction","handler"],"mappings":";;;;;;;AAEA;;AAGA;;mCAsBEA,S,EACAC,U,EACAC,mB,EACAC,gB,KACsC;AACtC,QAAMC,aAAa,GAAIC,EAAD,IAAQ;AAC5B,UAAMC,KAAK,GAAG,mDAAmCD,EAAnC,CAAd;AAEA,WAAQE,WAAD,IAAsD;AAC3D,UAAIJ,gBAAgB,KAAKF,UAAU,CAACA,UAAX,CAAsBO,MAAtB,CAA6BL,gBAAtD,EAAwE;AACtE,eAAOM,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,8CAAV,CAAf,CAAP;AACD;;AAED,aAAOL,KAAK,CAACC,WAAD,CAAZ;AACD,KAND;AAOD,GAVD;;AAYA,SAAO;AACLK,IAAAA,GAAG,EAAER,aAAa,CAACQ,uBAAIC,IAAJ,CAAS,IAAT,EAAeb,SAAf,EAA0BC,UAA1B,EAAsCC,mBAAtC,CAAD,CADb;AAELY,IAAAA,QAAQ,EAAEV,aAAa,CAACU,4BAASD,IAAT,CAAc,IAAd,EAAoBb,SAApB,EAA+BC,UAA/B,EAA2CC,mBAA3C,CAAD,CAFlB;AAGLa,IAAAA,IAAI,EAAEX,aAAa,CAACW,wBAAKF,IAAL,CAAU,IAAV,EAAgBb,SAAhB,EAA2BC,UAA3B,EAAuCC,mBAAvC,CAAD,CAHd;AAILc,IAAAA,SAAS,EAAEZ,aAAa,CAACY,6BAAUH,IAAV,CAAe,IAAf,EAAqBb,SAArB,EAAgCC,UAAhC,EAA4CC,mBAA5C,CAAD,CAJnB;AAKLe,IAAAA,QAAQ,EAAEb,aAAa,CAACa,4BAASJ,IAAT,CAAc,IAAd,EAAoBb,SAApB,EAA+BC,UAA/B,EAA2CC,mBAA3C,CAAD,CALlB;AAMLgB,IAAAA,aAAa,EAAEd,aAAa,CAACc,iCAAcL,IAAd,CAAmB,IAAnB,EAAyBb,SAAzB,EAAoCC,UAApC,EAAgDC,mBAAhD,CAAD,CANvB;AAOLiB,IAAAA,GAAG,EAAEf,aAAa,CAACe,uBAAIN,IAAJ,CAAS,IAAT,EAAeb,SAAf,EAA0BC,UAA1B,EAAsCC,mBAAtC,CAAD,CAPb;AAQLkB,IAAAA,QAAQ,EAAEhB,aAAa,CAACgB,4BAASP,IAAT,CAAc,IAAd,EAAoBb,SAApB,EAA+BC,UAA/B,EAA2CC,mBAA3C,CAAD,CARlB;AASLmB,IAAAA,KAAK,EAAEjB,aAAa,CAACiB,yBAAMR,IAAN,CAAW,IAAX,EAAiBb,SAAjB,EAA4BC,UAA5B,EAAwCC,mBAAxC,CAAD,CATf;AAULoB,IAAAA,WAAW,EAAGC,OAAD,IAAsC;AACjD,aAAO,0CAAkBvB,SAAlB,EAA6BC,UAA7B,EAAyCC,mBAAzC,EAA8DqB,OAA9D,EAAuEpB,gBAAvE,CAAP;AACD;AAZI,GAAP;AAcD,C","sourcesContent":["// @flow\n\nimport {\n  mapTaggedTemplateLiteralInvocation\n} from '../utilities';\nimport {\n  any,\n  anyFirst,\n  many,\n  manyFirst,\n  maybeOne,\n  maybeOneFirst,\n  nestedTransaction,\n  one,\n  oneFirst,\n  query\n} from '../connectionMethods';\nimport type {\n  ClientConfigurationType,\n  DatabaseTransactionConnectionType,\n  InternalDatabaseConnectionType,\n  LoggerType,\n  TaggedTemplateLiteralInvocationType,\n  TransactionFunctionType\n} from '../types';\n\nexport default (\n  parentLog: LoggerType,\n  connection: InternalDatabaseConnectionType,\n  clientConfiguration: ClientConfigurationType,\n  transactionDepth: number\n): DatabaseTransactionConnectionType => {\n  const mapInvocation = (fn) => {\n    const bound = mapTaggedTemplateLiteralInvocation(fn);\n\n    return (taggedQuery: TaggedTemplateLiteralInvocationType) => {\n      if (transactionDepth !== connection.connection.slonik.transactionDepth) {\n        return Promise.reject(new Error('Cannot run a query using parent transaction.'));\n      }\n\n      return bound(taggedQuery);\n    };\n  };\n\n  return {\n    any: mapInvocation(any.bind(null, parentLog, connection, clientConfiguration)),\n    anyFirst: mapInvocation(anyFirst.bind(null, parentLog, connection, clientConfiguration)),\n    many: mapInvocation(many.bind(null, parentLog, connection, clientConfiguration)),\n    manyFirst: mapInvocation(manyFirst.bind(null, parentLog, connection, clientConfiguration)),\n    maybeOne: mapInvocation(maybeOne.bind(null, parentLog, connection, clientConfiguration)),\n    maybeOneFirst: mapInvocation(maybeOneFirst.bind(null, parentLog, connection, clientConfiguration)),\n    one: mapInvocation(one.bind(null, parentLog, connection, clientConfiguration)),\n    oneFirst: mapInvocation(oneFirst.bind(null, parentLog, connection, clientConfiguration)),\n    query: mapInvocation(query.bind(null, parentLog, connection, clientConfiguration)),\n    transaction: (handler: TransactionFunctionType) => {\n      return nestedTransaction(parentLog, connection, clientConfiguration, handler, transactionDepth);\n    }\n  };\n};\n"],"file":"bindTransactionConnection.js"}