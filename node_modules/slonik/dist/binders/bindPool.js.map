{"version":3,"sources":["../../src/binders/bindPool.js"],"names":["parentLog","pool","clientConfiguration","mapConnection","targetMethodName","query","TypeError","connectionLog","connection","boundConnection","newPool","any","anyFirst","connect","connectionHandler","many","manyFirst","maybeOne","maybeOneFirst","one","oneFirst","stream","streamHandler","transaction","transactionHandler"],"mappings":";;;;;;;AAUA;;AAGA;;kBAKEA,S,EACAC,I,EACAC,mB,KACqB;AACrB,QAAMC,aAAa,GAAIC,gBAAD,IAA8B;AAClD,WAAQC,KAAD,IAAgD;AACrD,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,cAAM,IAAIC,SAAJ,CAAc,gEAAd,CAAN;AACD;;AAED,aAAO,iCACLN,SADK,EAELC,IAFK,EAGLC,mBAHK,EAIL,gBAJK,EAKL,CAACK,aAAD,EAAgBC,UAAhB,EAA4BC,eAA5B,KAAgD;AAC9C,eAAOA,eAAe,CAACL,gBAAD,CAAf,CAAkCC,KAAlC,CAAP;AACD,OAPI,EAQJK,OAAD,IAAa;AACX,eAAOA,OAAO,CAACN,gBAAD,CAAP,CAA0BC,KAA1B,CAAP;AACD,OAVI,EAWLA,KAXK,CAAP;AAaD,KAlBD;AAmBD,GApBD;;AAsBA,SAAO;AACLM,IAAAA,GAAG,EAAER,aAAa,CAAC,KAAD,CADb;AAELS,IAAAA,QAAQ,EAAET,aAAa,CAAC,UAAD,CAFlB;AAGLU,IAAAA,OAAO,EAAGC,iBAAD,IAAuB;AAC9B,aAAO,iCACLd,SADK,EAELC,IAFK,EAGLC,mBAHK,EAIL,UAJK,EAKL,CAACK,aAAD,EAAgBC,UAAhB,EAA4BC,eAA5B,KAAgD;AAC9C,eAAOK,iBAAiB,CAACL,eAAD,CAAxB;AACD,OAPI,EAQJC,OAAD,IAAa;AACX,eAAOA,OAAO,CAACG,OAAR,CAAgBC,iBAAhB,CAAP;AACD,OAVI,CAAP;AAYD,KAhBI;AAiBLC,IAAAA,IAAI,EAAEZ,aAAa,CAAC,MAAD,CAjBd;AAkBLa,IAAAA,SAAS,EAAEb,aAAa,CAAC,WAAD,CAlBnB;AAmBLc,IAAAA,QAAQ,EAAEd,aAAa,CAAC,UAAD,CAnBlB;AAoBLe,IAAAA,aAAa,EAAEf,aAAa,CAAC,eAAD,CApBvB;AAqBLgB,IAAAA,GAAG,EAAEhB,aAAa,CAAC,KAAD,CArBb;AAsBLiB,IAAAA,QAAQ,EAAEjB,aAAa,CAAC,UAAD,CAtBlB;AAuBLE,IAAAA,KAAK,EAAEF,aAAa,CAAC,OAAD,CAvBf;AAwBLkB,IAAAA,MAAM,EAAE,OAAOhB,KAAP,EAAmDiB,aAAnD,KAAwF;AAC9F,UAAI,OAAOjB,KAAP,KAAiB,QAArB,EAA+B;AAC7B,cAAM,IAAIC,SAAJ,CAAc,gEAAd,CAAN;AACD;;AAED,YAAM,iCACJN,SADI,EAEJC,IAFI,EAGJC,mBAHI,EAIJ,gBAJI,EAKJ,CAACK,aAAD,EAAgBC,UAAhB,EAA4BC,eAA5B,KAAgD;AAC9C,eAAOA,eAAe,CAACY,MAAhB,CAAuBhB,KAAvB,EAA8BiB,aAA9B,CAAP;AACD,OAPG,EAQHZ,OAAD,IAAa;AACX,eAAOA,OAAO,CAACW,MAAR,CAAehB,KAAf,EAAsBiB,aAAtB,CAAP;AACD,OAVG,EAWJjB,KAXI,CAAN;AAcA,aAAO,IAAP;AACD,KA5CI;AA6CLkB,IAAAA,WAAW,EAAE,MAAOC,kBAAP,IAA8B;AACzC,aAAO,iCACLxB,SADK,EAELC,IAFK,EAGLC,mBAHK,EAIL,sBAJK,EAKL,CAACK,aAAD,EAAgBC,UAAhB,KAA+B;AAC7B,eAAO,oCAAYD,aAAZ,EAA2BC,UAA3B,EAAuCN,mBAAvC,EAA4DsB,kBAA5D,CAAP;AACD,OAPI,EAQJd,OAAD,IAAa;AACX,eAAOA,OAAO,CAACa,WAAR,CAAoBC,kBAApB,CAAP;AACD,OAVI,CAAP;AAYD;AA1DI,GAAP;AA4DD,C","sourcesContent":["// @flow\n\nimport type {\n  ClientConfigurationType,\n  DatabasePoolType,\n  InternalDatabasePoolType,\n  LoggerType,\n  StreamHandlerType,\n  TaggedTemplateLiteralInvocationType\n} from '../types';\nimport {\n  createConnection\n} from '../factories';\nimport {\n  transaction\n} from '../connectionMethods';\n\nexport default (\n  parentLog: LoggerType,\n  pool: InternalDatabasePoolType,\n  clientConfiguration: ClientConfigurationType\n): DatabasePoolType => {\n  const mapConnection = (targetMethodName: string) => {\n    return (query: TaggedTemplateLiteralInvocationType) => {\n      if (typeof query === 'string') {\n        throw new TypeError('Query must be constructed using `sql` tagged template literal.');\n      }\n\n      return createConnection(\n        parentLog,\n        pool,\n        clientConfiguration,\n        'IMPLICIT_QUERY',\n        (connectionLog, connection, boundConnection) => {\n          return boundConnection[targetMethodName](query);\n        },\n        (newPool) => {\n          return newPool[targetMethodName](query);\n        },\n        query\n      );\n    };\n  };\n\n  return {\n    any: mapConnection('any'),\n    anyFirst: mapConnection('anyFirst'),\n    connect: (connectionHandler) => {\n      return createConnection(\n        parentLog,\n        pool,\n        clientConfiguration,\n        'EXPLICIT',\n        (connectionLog, connection, boundConnection) => {\n          return connectionHandler(boundConnection);\n        },\n        (newPool) => {\n          return newPool.connect(connectionHandler);\n        }\n      );\n    },\n    many: mapConnection('many'),\n    manyFirst: mapConnection('manyFirst'),\n    maybeOne: mapConnection('maybeOne'),\n    maybeOneFirst: mapConnection('maybeOneFirst'),\n    one: mapConnection('one'),\n    oneFirst: mapConnection('oneFirst'),\n    query: mapConnection('query'),\n    stream: async (query: TaggedTemplateLiteralInvocationType, streamHandler: StreamHandlerType) => {\n      if (typeof query === 'string') {\n        throw new TypeError('Query must be constructed using `sql` tagged template literal.');\n      }\n\n      await createConnection(\n        parentLog,\n        pool,\n        clientConfiguration,\n        'IMPLICIT_QUERY',\n        (connectionLog, connection, boundConnection) => {\n          return boundConnection.stream(query, streamHandler);\n        },\n        (newPool) => {\n          return newPool.stream(query, streamHandler);\n        },\n        query\n      );\n\n      return null;\n    },\n    transaction: async (transactionHandler) => {\n      return createConnection(\n        parentLog,\n        pool,\n        clientConfiguration,\n        'IMPLICIT_TRANSACTION',\n        (connectionLog, connection) => {\n          return transaction(connectionLog, connection, clientConfiguration, transactionHandler);\n        },\n        (newPool) => {\n          return newPool.transaction(transactionHandler);\n        }\n      );\n    }\n  };\n};\n"],"file":"bindPool.js"}