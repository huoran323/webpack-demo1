{"version":3,"sources":["../../src/binders/bindPoolConnection.js"],"names":["parentLog","connection","clientConfiguration","any","bind","anyFirst","many","manyFirst","maybeOne","maybeOneFirst","one","oneFirst","query","stream","streamQuery","streamHandler","TypeError","sql","values","transaction","handler"],"mappings":";;;;;;;AAEA;;AAYA;;4BAeEA,S,EACAC,U,EACAC,mB,KAC+B;AAC/B,SAAO;AACLC,IAAAA,GAAG,EAAE,mDAAmCA,uBAAIC,IAAJ,CAAS,IAAT,EAAeJ,SAAf,EAA0BC,UAA1B,EAAsCC,mBAAtC,CAAnC,CADA;AAELG,IAAAA,QAAQ,EAAE,mDAAmCA,4BAASD,IAAT,CAAc,IAAd,EAAoBJ,SAApB,EAA+BC,UAA/B,EAA2CC,mBAA3C,CAAnC,CAFL;AAGLI,IAAAA,IAAI,EAAE,mDAAmCA,wBAAKF,IAAL,CAAU,IAAV,EAAgBJ,SAAhB,EAA2BC,UAA3B,EAAuCC,mBAAvC,CAAnC,CAHD;AAILK,IAAAA,SAAS,EAAE,mDAAmCA,6BAAUH,IAAV,CAAe,IAAf,EAAqBJ,SAArB,EAAgCC,UAAhC,EAA4CC,mBAA5C,CAAnC,CAJN;AAKLM,IAAAA,QAAQ,EAAE,mDAAmCA,4BAASJ,IAAT,CAAc,IAAd,EAAoBJ,SAApB,EAA+BC,UAA/B,EAA2CC,mBAA3C,CAAnC,CALL;AAMLO,IAAAA,aAAa,EAAE,mDAAmCA,iCAAcL,IAAd,CAAmB,IAAnB,EAAyBJ,SAAzB,EAAoCC,UAApC,EAAgDC,mBAAhD,CAAnC,CANV;AAOLQ,IAAAA,GAAG,EAAE,mDAAmCA,uBAAIN,IAAJ,CAAS,IAAT,EAAeJ,SAAf,EAA0BC,UAA1B,EAAsCC,mBAAtC,CAAnC,CAPA;AAQLS,IAAAA,QAAQ,EAAE,mDAAmCA,4BAASP,IAAT,CAAc,IAAd,EAAoBJ,SAApB,EAA+BC,UAA/B,EAA2CC,mBAA3C,CAAnC,CARL;AASLU,IAAAA,KAAK,EAAE,mDAAmCA,yBAAMR,IAAN,CAAW,IAAX,EAAiBJ,SAAjB,EAA4BC,UAA5B,EAAwCC,mBAAxC,CAAnC,CATF;AAULW,IAAAA,MAAM,EAAE,OAAOC,WAAP,EAAyDC,aAAzD,KAA8F;AACpG,UAAI,OAAOD,WAAP,KAAuB,QAA3B,EAAqC;AACnC,cAAM,IAAIE,SAAJ,CAAc,gEAAd,CAAN;AACD;;AAED,aAAO,+BAAOhB,SAAP,EAAkBC,UAAlB,EAA8BC,mBAA9B,EAAmDY,WAAW,CAACG,GAA/D,EAAoEH,WAAW,CAACI,MAAhF,EAAwFH,aAAxF,CAAP;AACD,KAhBI;AAiBLI,IAAAA,WAAW,EAAE,MAAOC,OAAP,IAA4C;AACvD,aAAO,oCAAYpB,SAAZ,EAAuBC,UAAvB,EAAmCC,mBAAnC,EAAwDkB,OAAxD,CAAP;AACD;AAnBI,GAAP;AAqBD,C","sourcesContent":["// @flow\n\nimport {\n  mapTaggedTemplateLiteralInvocation\n} from '../utilities';\nimport type {\n  ClientConfigurationType,\n  DatabasePoolConnectionType,\n  InternalDatabaseConnectionType,\n  LoggerType,\n  StreamHandlerType,\n  TaggedTemplateLiteralInvocationType,\n  TransactionFunctionType\n} from '../types';\nimport {\n  any,\n  anyFirst,\n  many,\n  manyFirst,\n  maybeOne,\n  maybeOneFirst,\n  one,\n  oneFirst,\n  query,\n  stream,\n  transaction\n} from '../connectionMethods';\n\nexport default (\n  parentLog: LoggerType,\n  connection: InternalDatabaseConnectionType,\n  clientConfiguration: ClientConfigurationType\n): DatabasePoolConnectionType => {\n  return {\n    any: mapTaggedTemplateLiteralInvocation(any.bind(null, parentLog, connection, clientConfiguration)),\n    anyFirst: mapTaggedTemplateLiteralInvocation(anyFirst.bind(null, parentLog, connection, clientConfiguration)),\n    many: mapTaggedTemplateLiteralInvocation(many.bind(null, parentLog, connection, clientConfiguration)),\n    manyFirst: mapTaggedTemplateLiteralInvocation(manyFirst.bind(null, parentLog, connection, clientConfiguration)),\n    maybeOne: mapTaggedTemplateLiteralInvocation(maybeOne.bind(null, parentLog, connection, clientConfiguration)),\n    maybeOneFirst: mapTaggedTemplateLiteralInvocation(maybeOneFirst.bind(null, parentLog, connection, clientConfiguration)),\n    one: mapTaggedTemplateLiteralInvocation(one.bind(null, parentLog, connection, clientConfiguration)),\n    oneFirst: mapTaggedTemplateLiteralInvocation(oneFirst.bind(null, parentLog, connection, clientConfiguration)),\n    query: mapTaggedTemplateLiteralInvocation(query.bind(null, parentLog, connection, clientConfiguration)),\n    stream: async (streamQuery: TaggedTemplateLiteralInvocationType, streamHandler: StreamHandlerType) => {\n      if (typeof streamQuery === 'string') {\n        throw new TypeError('Query must be constructed using `sql` tagged template literal.');\n      }\n\n      return stream(parentLog, connection, clientConfiguration, streamQuery.sql, streamQuery.values, streamHandler);\n    },\n    transaction: async (handler: TransactionFunctionType) => {\n      return transaction(parentLog, connection, clientConfiguration, handler);\n    }\n  };\n};\n"],"file":"bindPoolConnection.js"}