{"version":3,"sources":["../../src/connectionMethods/any.js"],"names":["any","log","connection","clientConfiguration","rawSql","values","inheritedQueryId","queryId","rows"],"mappings":";;;;;;;AAEA;;AAMA;;;;AAEA;;;AAGA,MAAMA,GAAiC,GAAG,OAAOC,GAAP,EAAYC,UAAZ,EAAwBC,mBAAxB,EAA6CC,MAA7C,EAAqDC,MAArD,EAA6DC,gBAA7D,KAAkF;AAC1H,QAAMC,OAAO,GAAGD,gBAAgB,IAAI,+BAApC;AAEA,QAAM;AACJE,IAAAA;AADI,MAEF,MAAM,oBAAMP,GAAN,EAAWC,UAAX,EAAuBC,mBAAvB,EAA4CC,MAA5C,EAAoDC,MAApD,EAA4DE,OAA5D,CAFV;AAIA,SAAOC,IAAP;AACD,CARD;;eAUeR,G","sourcesContent":["// @flow\n\nimport {\n  createQueryId\n} from '../utilities';\nimport type {\n  InternalQueryAnyFunctionType\n} from '../types';\nimport query from './query';\n\n/**\n * Makes a query and expects any number of results.\n */\nconst any: InternalQueryAnyFunctionType = async (log, connection, clientConfiguration, rawSql, values, inheritedQueryId) => {\n  const queryId = inheritedQueryId || createQueryId();\n\n  const {\n    rows\n  } = await query(log, connection, clientConfiguration, rawSql, values, queryId);\n\n  return rows;\n};\n\nexport default any;\n"],"file":"any.js"}