{"version":3,"sources":["../../src/connectionMethods/oneFirst.js"],"names":["oneFirst","log","connection","clientConfiguration","rawSql","values","inheritedQueryId","queryId","row","keys","Object","length","error","UnexpectedStateError"],"mappings":";;;;;;;AAEA;;AAGA;;AAMA;;;;AAEA;;;;;;;AAOA,MAAMA,QAA2C,GAAG,OAAOC,GAAP,EAAYC,UAAZ,EAAwBC,mBAAxB,EAA6CC,MAA7C,EAAqDC,MAArD,EAA6DC,gBAA7D,KAAkF;AACpI,QAAMC,OAAO,GAAGD,gBAAgB,IAAI,+BAApC;AAEA,QAAME,GAAG,GAAG,MAAM,kBAAIP,GAAJ,EAASC,UAAT,EAAqBC,mBAArB,EAA0CC,MAA1C,EAAkDC,MAAlD,EAA0DE,OAA1D,CAAlB;AAEA,QAAME,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,GAAZ,CAAb;;AAEA,MAAIC,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACnBV,IAAAA,GAAG,CAACW,KAAJ,CAAU;AACRL,MAAAA;AADQ,KAAV,EAEG,oBAFH;AAIA,UAAM,IAAIM,4BAAJ,EAAN;AACD;;AAED,SAAOL,GAAG,CAACC,IAAI,CAAC,CAAD,CAAL,CAAV;AACD,CAhBD;;eAkBeT,Q","sourcesContent":["// @flow\n\nimport {\n  createQueryId\n} from '../utilities';\nimport {\n  UnexpectedStateError\n} from '../errors';\nimport type {\n  InternalQueryOneFirstFunctionType\n} from '../types';\nimport one from './one';\n\n/**\n * Makes a query and expects exactly one result.\n * Returns value of the first column.\n *\n * @throws NotFoundError If query returns no rows.\n * @throws DataIntegrityError If query returns multiple rows.\n */\nconst oneFirst: InternalQueryOneFirstFunctionType = async (log, connection, clientConfiguration, rawSql, values, inheritedQueryId) => {\n  const queryId = inheritedQueryId || createQueryId();\n\n  const row = await one(log, connection, clientConfiguration, rawSql, values, queryId);\n\n  const keys = Object.keys(row);\n\n  if (keys.length > 1) {\n    log.error({\n      queryId\n    }, 'DataIntegrityError');\n\n    throw new UnexpectedStateError();\n  }\n\n  return row[keys[0]];\n};\n\nexport default oneFirst;\n"],"file":"oneFirst.js"}