{"version":3,"sources":["../../src/connectionMethods/nestedTransaction.js"],"names":["nestedTransaction","parentLog","connection","clientConfiguration","handler","transactionDepth","newTransactionDepth","query","log","child","transactionId","slonik","result","error"],"mappings":";;;;;;;AAEA;;AACA;;AAGA;;;;AAOA,MAAMA,iBAAwD,GAAG,OAAOC,SAAP,EAAkBC,UAAlB,EAA8BC,mBAA9B,EAAmDC,OAAnD,EAA4DC,gBAA5D,KAAiF;AAChJ,QAAMC,mBAAmB,GAAGD,gBAAgB,GAAG,CAA/C;AAEA,QAAMH,UAAU,CAACK,KAAX,CAAiB,gCAAgCD,mBAAjD,CAAN;AAEA,QAAME,GAAG,GAAGP,SAAS,CAACQ,KAAV,CAAgB;AAC1BC,IAAAA,aAAa,EAAE;AADW,GAAhB,CAAZ;;AAIA,MAAI;AACFR,IAAAA,UAAU,CAACA,UAAX,CAAsBS,MAAtB,CAA6BN,gBAA7B,GAAgDC,mBAAhD;AAEA,UAAMM,MAAM,GAAG,MAAMR,OAAO,CAAC,wCAA0BI,GAA1B,EAA+BN,UAA/B,EAA2CC,mBAA3C,EAAgEG,mBAAhE,CAAD,CAA5B;AAEA,WAAOM,MAAP;AACD,GAND,CAME,OAAOC,KAAP,EAAc;AACd,UAAMX,UAAU,CAACK,KAAX,CAAiB,4CAA4CD,mBAA7D,CAAN;AAEAE,IAAAA,GAAG,CAACK,KAAJ,CAAU;AACRA,MAAAA,KAAK,EAAE,6BAAeA,KAAf;AADC,KAAV,EAEG,0CAFH;AAIA,UAAMA,KAAN;AACD,GAdD,SAcU;AACRX,IAAAA,UAAU,CAACA,UAAX,CAAsBS,MAAtB,CAA6BN,gBAA7B,GAAgDC,mBAAmB,GAAG,CAAtE;AACD;AACF,CA1BD;;eA4BeN,iB","sourcesContent":["// @flow\n\nimport serializeError from 'serialize-error';\nimport {\n  bindTransactionConnection\n} from '../binders';\nimport {\n  createUlid\n} from '../utilities';\nimport type {\n  InternalNestedTransactionFunctionType\n} from '../types';\n\nconst nestedTransaction: InternalNestedTransactionFunctionType = async (parentLog, connection, clientConfiguration, handler, transactionDepth) => {\n  const newTransactionDepth = transactionDepth + 1;\n\n  await connection.query('SAVEPOINT slonik_savepoint_' + newTransactionDepth);\n\n  const log = parentLog.child({\n    transactionId: createUlid()\n  });\n\n  try {\n    connection.connection.slonik.transactionDepth = newTransactionDepth;\n\n    const result = await handler(bindTransactionConnection(log, connection, clientConfiguration, newTransactionDepth));\n\n    return result;\n  } catch (error) {\n    await connection.query('ROLLBACK TO SAVEPOINT slonik_savepoint_' + newTransactionDepth);\n\n    log.error({\n      error: serializeError(error)\n    }, 'rolling back transaction due to an error');\n\n    throw error;\n  } finally {\n    connection.connection.slonik.transactionDepth = newTransactionDepth - 1;\n  }\n};\n\nexport default nestedTransaction;\n"],"file":"nestedTransaction.js"}