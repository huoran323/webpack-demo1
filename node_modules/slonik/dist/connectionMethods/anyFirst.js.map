{"version":3,"sources":["../../src/connectionMethods/anyFirst.js"],"names":["anyFirst","log","connection","clientConfigurationType","rawSql","values","inheritedQueryId","queryId","rows","length","firstRow","keys","Object","error","DataIntegrityError","firstColumnName","map","row"],"mappings":";;;;;;;AAEA;;AAGA;;AAMA;;;;AAEA,MAAMA,QAA2C,GAAG,OAAOC,GAAP,EAAYC,UAAZ,EAAwBC,uBAAxB,EAAiDC,MAAjD,EAAyDC,MAAzD,EAAiEC,gBAAjE,KAAsF;AACxI,QAAMC,OAAO,GAAGD,gBAAgB,IAAI,+BAApC;AAEA,QAAME,IAAI,GAAG,MAAM,kBAAIP,GAAJ,EAASC,UAAT,EAAqBC,uBAArB,EAA8CC,MAA9C,EAAsDC,MAAtD,EAA8DE,OAA9D,CAAnB;;AAEA,MAAIC,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,WAAO,EAAP;AACD;;AAED,QAAMC,QAAQ,GAAGF,IAAI,CAAC,CAAD,CAArB;AAEA,QAAMG,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,QAAZ,CAAb;;AAEA,MAAIC,IAAI,CAACF,MAAL,KAAgB,CAApB,EAAuB;AACrBR,IAAAA,GAAG,CAACY,KAAJ,CAAU;AACRN,MAAAA;AADQ,KAAV,EAEG,2BAFH;AAIA,UAAM,IAAIO,0BAAJ,EAAN;AACD;;AAED,QAAMC,eAAe,GAAGJ,IAAI,CAAC,CAAD,CAA5B;AAEA,SAAOH,IAAI,CAACQ,GAAL,CAAUC,GAAD,IAAS;AACvB,WAAOA,GAAG,CAACF,eAAD,CAAV;AACD,GAFM,CAAP;AAGD,CA1BD;;eA4Bef,Q","sourcesContent":["// @flow\n\nimport {\n  createQueryId\n} from '../utilities';\nimport {\n  DataIntegrityError\n} from '../errors';\nimport type {\n  InternalQueryAnyFirstFunctionType\n} from '../types';\nimport any from './any';\n\nconst anyFirst: InternalQueryAnyFirstFunctionType = async (log, connection, clientConfigurationType, rawSql, values, inheritedQueryId) => {\n  const queryId = inheritedQueryId || createQueryId();\n\n  const rows = await any(log, connection, clientConfigurationType, rawSql, values, queryId);\n\n  if (rows.length === 0) {\n    return [];\n  }\n\n  const firstRow = rows[0];\n\n  const keys = Object.keys(firstRow);\n\n  if (keys.length !== 1) {\n    log.error({\n      queryId\n    }, 'result row has no columns');\n\n    throw new DataIntegrityError();\n  }\n\n  const firstColumnName = keys[0];\n\n  return rows.map((row) => {\n    return row[firstColumnName];\n  });\n};\n\nexport default anyFirst;\n"],"file":"anyFirst.js"}