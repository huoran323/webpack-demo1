{"version":3,"sources":["../../src/sqlFragmentFactories/createIdentifierSqlFragment.js"],"names":["token","sql","names","map","identifierName","TypeError","join","values"],"mappings":";;;;;;;AAMA;;oCAIgBA,K,IAAgD;AAC9D,QAAMC,GAAG,GAAGD,KAAK,CAACE,KAAN,CACTC,GADS,CACJC,cAAD,IAAoB;AACvB,QAAI,OAAOA,cAAP,KAA0B,QAA9B,EAAwC;AACtC,YAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AACD;;AAED,WAAO,iCAAiBD,cAAjB,CAAP;AACD,GAPS,EAQTE,IARS,CAQJ,GARI,CAAZ;AAUA,SAAO;AACLL,IAAAA,GADK;AAELM,IAAAA,MAAM,EAAE;AAFH,GAAP;AAID,C","sourcesContent":["// @flow\n\nimport type {\n  IdentifierTokenType,\n  SqlFragmentType\n} from '../types';\nimport {\n  escapeIdentifier\n} from '../utilities';\n\nexport default (token: IdentifierTokenType): SqlFragmentType => {\n  const sql = token.names\n    .map((identifierName) => {\n      if (typeof identifierName !== 'string') {\n        throw new TypeError('Identifier name must be a string.');\n      }\n\n      return escapeIdentifier(identifierName);\n    })\n    .join('.');\n\n  return {\n    sql,\n    values: []\n  };\n};\n"],"file":"createIdentifierSqlFragment.js"}