{"version":3,"sources":["../../src/sqlFragmentFactories/createRawSqlSqlFragment.js"],"names":["token","greatestParameterPosition","Array","isArray","values","sql"],"mappings":";;;;;;;AAMA;;iCAKgBA,K,EAAwBC,yB,KAAuD;AAC7F,MAAIC,KAAK,CAACC,OAAN,CAAcH,KAAK,CAACI,MAApB,CAAJ,EAAiC;AAC/B,WAAO,uDAAuCJ,KAAK,CAACK,GAA7C,EAAkDL,KAAK,CAACI,MAAxD,EAAgEH,yBAAhE,CAAP;AACD,GAFD,MAEO;AACL,WAAO,kDAAkCD,KAAK,CAACK,GAAxC,EAA6CL,KAAK,CAACI,MAAnD,EAA2DH,yBAA3D,CAAP;AACD;AACF,C","sourcesContent":["// @flow\n\nimport type {\n  RawSqlTokenType,\n  SqlFragmentType\n} from '../types';\nimport {\n  normalizePositionalParameterReferences,\n  normalizeNamedParameterReferences\n} from '../utilities';\n\nexport default (token: RawSqlTokenType, greatestParameterPosition: number): SqlFragmentType => {\n  if (Array.isArray(token.values)) {\n    return normalizePositionalParameterReferences(token.sql, token.values, greatestParameterPosition);\n  } else {\n    return normalizeNamedParameterReferences(token.sql, token.values, greatestParameterPosition);\n  }\n};\n"],"file":"createRawSqlSqlFragment.js"}