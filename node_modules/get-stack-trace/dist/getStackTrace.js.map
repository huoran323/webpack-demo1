{"version":3,"sources":["../src/getStackTrace.js"],"names":["oldStackTraceLimit","Error","stackTraceLimit","oldPrepareStackTrace","prepareStackTrace","error","structuredStackTrace","honeypot","captureStackTrace","callSites","stack","trail","slice","Bluebird","resolve","map","callSite"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;;;;;;;4BAMwE;AACtE,QAAMA,kBAAkB,GAAGC,KAAK,CAACC,eAAjC;AACA,QAAMC,oBAAoB,GAAGF,KAAK,CAACG,iBAAnC;;AAEAH,EAAAA,KAAK,CAACG,iBAAN,GAA0B,CAACC,KAAD,EAAQC,oBAAR,KAAiC;AACzD,WAAOA,oBAAP;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,EAAjB;AAEAN,EAAAA,KAAK,CAACO,iBAAN,CAAwBD,QAAxB;AAEA,QAAME,SAAS,GAAGF,QAAQ,CAACG,KAA3B;AAEAT,EAAAA,KAAK,CAACC,eAAN,GAAwBF,kBAAxB;AACAC,EAAAA,KAAK,CAACG,iBAAN,GAA0BD,oBAA1B;AAEA,QAAMQ,KAAmC,GAAGF,SAAS,CAACG,KAAV,CAAgB,CAAhB,CAA5C;AAEA,SAAOC,kBACJC,OADI,CACIH,KADJ,EAEJI,GAFI,CAEA,MAAOC,QAAP,IAAoB;AACvB,QAAI,CAAC,qDAAuCA,QAAvC,CAAL,EAAuD;AACrD,aAAO,kCAAoBA,QAApB,CAAP;AACD;;AAED,6BACK,kCAAoBA,QAApB,CADL,GAEK,MAAM,gDAAkCA,QAAlC,CAFX;AAID,GAXI,CAAP;AAYD,C","sourcesContent":["// @flow\n\nimport Bluebird from 'bluebird';\nimport isCallSiteSourceCodeLocationResolvable from './isCallSiteSourceCodeLocationResolvable';\nimport materializeCallSite from './materializeCallSite';\nimport resolveCallSiteSourceCodeLocation from './resolveCallSiteSourceCodeLocation';\nimport type {\n  CallSiteType,\n  MaterializedCallSiteType\n} from './types';\n\nexport default (): Promise<$ReadOnlyArray<MaterializedCallSiteType>> => {\n  const oldStackTraceLimit = Error.stackTraceLimit;\n  const oldPrepareStackTrace = Error.prepareStackTrace;\n\n  Error.prepareStackTrace = (error, structuredStackTrace) => {\n    return structuredStackTrace;\n  };\n\n  const honeypot = {};\n\n  Error.captureStackTrace(honeypot);\n\n  const callSites = honeypot.stack;\n\n  Error.stackTraceLimit = oldStackTraceLimit;\n  Error.prepareStackTrace = oldPrepareStackTrace;\n\n  const trail: $ReadOnlyArray<CallSiteType> = callSites.slice(1);\n\n  return Bluebird\n    .resolve(trail)\n    .map(async (callSite) => {\n      if (!isCallSiteSourceCodeLocationResolvable(callSite)) {\n        return materializeCallSite(callSite);\n      }\n\n      return {\n        ...materializeCallSite(callSite),\n        ...await resolveCallSiteSourceCodeLocation(callSite)\n      };\n    });\n};\n"],"file":"getStackTrace.js"}