"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var createBlockingWriter = function createBlockingWriter(stream) {
  return {
    flush: function flush() {},
    write: function write(message) {
      stream.write(message + '\n');
    }
  };
};

var createBufferedWriter = function createBufferedWriter(stream, bufferSize) {
  var flush = function flush() {
    if (!global.ROARR.buffer) {
      return;
    }

    var buffer = global.ROARR.buffer;
    global.ROARR.buffer = '';
    stream.write(buffer);
  };

  return {
    flush,
    write: function write(message) {
      global.ROARR.buffer += message + '\n';

      if (global.ROARR.buffer.length > bufferSize) {
        flush();
      } // @todo Write messages when the event loop is not busy.

    }
  };
}; // @todo Add browser support.


var createWriter = function createWriter(configuration) {
  var stream = configuration.stream.toUpperCase() === 'STDOUT' ? process.stdout : process.stderr;

  if (configuration.bufferSize) {
    return createBufferedWriter(stream, configuration.bufferSize);
  } else {
    return createBlockingWriter(stream);
  }
};

var _default = createWriter;
exports.default = _default;
//# sourceMappingURL=createWriter.js.map