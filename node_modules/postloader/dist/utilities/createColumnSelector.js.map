{"version":3,"sources":["../../src/utilities/createColumnSelector.js"],"names":["columns","alias","selectorAlias","map","column","normalizedColumnName","name","join"],"mappings":";;;;;;;AAEA;;eAOe,CAACA,OAAD,EAAsCC,KAAtC,KAAiE;AAC9E,QAAMC,aAAa,GAAGD,KAAK,GAAGA,KAAK,GAAG,GAAX,GAAiB,EAA5C;AAEA,SAAOD,OAAO,CACXG,GADI,CACCC,MAAD,IAAY;AACf,UAAMC,oBAAoB,GAAG,uBAAUD,MAAM,CAACE,IAAjB,CAA7B;AAEA,WAAOF,MAAM,CAACE,IAAP,KAAgBD,oBAAhB,GAAuCH,aAAa,GAAG,GAAhB,GAAsBG,oBAAtB,GAA6C,GAApF,GAA0FH,aAAa,GAAG,GAAhB,GAAsBE,MAAM,CAACE,IAA7B,GAAoC,KAApC,GAA4CD,oBAA5C,GAAmE,GAApK;AACD,GALI,EAMJE,IANI,CAMC,IAND,CAAP;AAOD,C","sourcesContent":["// @flow\n\nimport {\n  camelCase\n} from 'lodash';\nimport type {\n  ColumnType\n} from '../types';\n\nexport default (columns: $ReadOnlyArray<ColumnType>, alias: ?string): string => {\n  const selectorAlias = alias ? alias + '.' : '';\n\n  return columns\n    .map((column) => {\n      const normalizedColumnName = camelCase(column.name);\n\n      return column.name === normalizedColumnName ? selectorAlias + '\"' + normalizedColumnName + '\"' : selectorAlias + '\"' + column.name + '\" \"' + normalizedColumnName + '\"';\n    })\n    .join(', ');\n};\n"],"file":"createColumnSelector.js"}