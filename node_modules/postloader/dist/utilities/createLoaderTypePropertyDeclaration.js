"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _Logger = _interopRequireDefault(require("../Logger"));

var _formatTypeName = _interopRequireDefault(require("./formatTypeName"));

var _isNumberType = _interopRequireDefault(require("./isNumberType"));

var _isStringType = _interopRequireDefault(require("./isStringType"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const log = _Logger.default.child({
  namespace: 'createLoaderTypePropertyDeclaration'
});

var _default = (loaderName, dataTypeName, resourceName, resultIsArray) => {
  let keyType;

  if ((0, _isNumberType.default)(dataTypeName)) {
    keyType = 'number';
  } else if ((0, _isStringType.default)(dataTypeName)) {
    keyType = 'string';
  } else {
    log.error({
      dataTypeName,
      loaderName,
      resourceName,
      resultIsArray
    }, 'key type cannot be resolved to a string or number');
    throw new Error('Cannot resolve key type.');
  }

  if (resultIsArray) {
    return '+' + loaderName + ': DataLoader<' + keyType + ', $ReadOnlyArray<' + (0, _formatTypeName.default)(resourceName) + '>>';
  } else {
    return '+' + loaderName + ': DataLoader<' + keyType + ', ' + (0, _formatTypeName.default)(resourceName) + '>';
  }
};

exports.default = _default;
//# sourceMappingURL=createLoaderTypePropertyDeclaration.js.map