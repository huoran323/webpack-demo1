{"version":3,"sources":["../../src/utilities/getFlowType.js"],"names":["log","Logger","child","namespace","databaseTypeName","warn"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;;;AAEA,MAAMA,GAAG,GAAGC,gBAAOC,KAAP,CAAa;AACvBC,EAAAA,SAAS,EAAE;AADY,CAAb,CAAZ;;eAIgBC,gBAAD,IAAsC;AACnD,MAAIA,gBAAgB,KAAK,MAAzB,EAAiC;AAC/B,WAAO,QAAP;AACD;;AAED,MAAIA,gBAAgB,KAAK,SAAzB,EAAoC;AAClC,WAAO,SAAP;AACD;;AAED,MAAI,2BAAaA,gBAAb,CAAJ,EAAoC;AAClC,WAAO,QAAP;AACD;;AAED,MAAI,2BAAaA,gBAAb,CAAJ,EAAoC;AAClC,WAAO,QAAP;AACD;;AAED,MAAIA,gBAAgB,KAAK,MAArB,IAA+BA,gBAAgB,KAAK,OAAxD,EAAiE;AAC/D,WAAO,QAAP;AACD;;AAEDJ,EAAAA,GAAG,CAACK,IAAJ,CAAS;AACPD,IAAAA;AADO,GAAT,EAEG,cAFH;AAIA,SAAO,KAAP;AACD,C","sourcesContent":["// @flow\n\nimport Logger from '../Logger';\nimport isNumberType from './isNumberType';\nimport isStringType from './isStringType';\n\nconst log = Logger.child({\n  namespace: 'getFlowType'\n});\n\nexport default (databaseTypeName: string): string => {\n  if (databaseTypeName === 'json') {\n    return 'Object';\n  }\n\n  if (databaseTypeName === 'boolean') {\n    return 'boolean';\n  }\n\n  if (isStringType(databaseTypeName)) {\n    return 'string';\n  }\n\n  if (isNumberType(databaseTypeName)) {\n    return 'number';\n  }\n\n  if (databaseTypeName === 'json' || databaseTypeName === 'jsonb') {\n    return 'Object';\n  }\n\n  log.warn({\n    databaseTypeName\n  }, 'unknown type');\n\n  return 'any';\n};\n"],"file":"getFlowType.js"}