{"version":3,"sources":["../../src/queries/getDatabaseColumns.js"],"names":["connection","any","sql"],"mappings":";;;;;;;AAEA;;eAQe,MAAOA,UAAP,IAAmF;AAChG,SAAOA,UAAU,CAACC,GAAX,CAAeC,WAAI;;;;;;;;;;;;;;;;;;;;;GAAnB,CAAP;AAsBD,C","sourcesContent":["// @flow\n\nimport {\n  sql\n} from 'slonik';\nimport type {\n  ColumnType,\n  DatabaseConnectionType\n} from '../types';\n\nexport default async (connection: DatabaseConnectionType): Promise<$ReadOnlyArray<ColumnType>> => {\n  return connection.any(sql`\n    SELECT\n      pc1.relname \"tableName\",\n      pa1.attname \"name\",\n      pd1.description \"comment\",\n      pg_catalog.format_type (pa1.atttypid, NULL) \"dataType\",\n      pc1.relkind = 'm' \"isMaterializedView\",\n      NOT(pa1.attnotnull) \"isNullable\"\n    FROM pg_class pc1\n    INNER JOIN pg_namespace pn1 ON pn1.oid = pc1.relnamespace\n    INNER JOIN\n      pg_attribute pa1 ON pa1.attrelid = pc1.oid\n      AND pa1.attnum > 0\n      AND NOT pa1.attisdropped\n    LEFT JOIN pg_description pd1 ON pd1.objoid = pa1.attrelid AND pd1.objsubid = pa1.attnum\n    WHERE\n      pn1.nspname = 'public' AND\n      pc1.relkind IN ('r', 'm')\n    ORDER BY\n      pc1.relname ASC,\n      pa1.attnum ASC\n  `);\n};\n"],"file":"getDatabaseColumns.js"}